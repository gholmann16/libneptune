//List of functions provided by libneptune

#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <dirent.h>
#include <pwd.h>
#include <appimage/appimage.h>

//Lists programs installed by Neptune
int list(); 

//Searches through ~/.config/neptune/mirror database for program.
int find();  

/*  Trys to install AppImage provided. If it cannot find an AppImage, it will try to install from 
    AppImage repository. Can use direct path or file in current directory.  */
int install(char *file); 

//  Low level function that needs the exact filepath and integrates AppImage for all users
int integrate(char *file);

// Removes an app. Safer version of uninstall(). Only provide the name, not the full path
int destroy(char *program);

// Reinstalls app. Only provide file name
int reinstall(char* program); 

/*  If argc = 2 aka they called nep update, then it will update the AppImage repository. 
    If argc > 2, then it will update argv[2]. Only provide AppImage name    */
int update(int argc, char *program);

// Updates all updatable AppImages
int upgrade();

/*  Runs a program inside of the aisap sandbox, using the profiled generated by install();
    Give it the name of the program, as well as your argc and argv. argv[0] will be ignored 
    because that is represented by file */
int run(char *file, int arg, char* argv[]);

/*  Uninstalls app, along with all local app data. It will delete data not only for one user but for every user. 
    Make sure to heed warning in your instructions. */
int uninstall(char* name);

// Refreshes your list of apps, if its screwed up for some reason
int refresh(); 

// Updates an appimage directly. Provide direct path.
int update_appimage(char * appname); 

/*  If give = 0, prints app permissions. If change is inputted, give decides if neptune
    gives or takes away said permission from said app */
int permissions(int give, char* app, char* change);